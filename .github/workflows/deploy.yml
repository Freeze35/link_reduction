  name: CI/CD Pipeline

  on:
    push:
      branches:
        - master
      tags:
        - 'v1.0.0'

  jobs:
    build-and-deploy:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 # Необходимо для получения тегов

        - name: Get version for Go
          id: get_version
          run: |
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD)
            echo "Version is $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version-file: 'go.mod' # Использует версию Go из go.mod

        - name: Build Go binary with version
          run: |
            go build -ldflags="-X main.Version=${{ env.VERSION }}" -o app .

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Restore config.yaml from secrets
          run: |
            mkdir -p ./configs
            echo "${{ secrets.CONFIG_YAML }}" > ./internal/config/config.yaml

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: freeze35/linkreduction:latest

        - name: SSH to server and update containers
          uses: appleboy/ssh-action@v0.1.10
          with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SERVER_USER }}
            key: ${{ secrets.SERVER_SSH_KEY }}
            script: |
              cd /home/vpn/linkreduction
              sudo docker-compose pull app
              sudo docker-compose up -d app