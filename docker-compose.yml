services:

  app:
    container_name: link-reduction-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

    restart: always
    depends_on:
      - db
      - redis
    networks:
      - lr-network

  db:
    restart: always
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lr-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - lr-network

  prometheus:
      image: prom/prometheus:latest
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      networks:
        - lr-network

  kafka:
    image: bitnami/kafka:3.6.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_KRAFT_CLUSTER_ID: "abcdefghijklmnopqrstuv"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - lr-network

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: always
    depends_on:
      - prometheus
    networks:
      - lr-network

volumes:
  db-data:
  redis_data:

networks:
  lr-network:
    driver: bridge
